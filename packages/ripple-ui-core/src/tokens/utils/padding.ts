import StyleDictionary from 'style-dictionary'

// Padding
StyleDictionary.registerFormat({
  name: 'utilities/paddingClasses',
  formatter: function ({ dictionary }) {
    let output = `/**
 * Padding util
 *
 * This file is automatically generated, do not edit directly!
 */
`
    for (let i = 0; i < dictionary.properties.steps.value; i++) {
      output += `.rpl-u-padding-${i + 1} {
  padding: var(--rpl-sp-${i + 1});
}

.rpl-u-padding-t-${i + 1} {
  padding-top: var(--rpl-sp-${i + 1});
}

.rpl-u-padding-r-${i + 1} {
  padding-right: var(--rpl-sp-${i + 1});
}

.rpl-u-padding-b-${i + 1} {
  padding-bottom: var(--rpl-sp-${i + 1});
}

.rpl-u-padding-l-${i + 1} {
  padding-left: var(--rpl-sp-${i + 1});
}

`
    }
    return output
  }
})

StyleDictionary.extend({
  properties: {
    steps: {
      value: 14
    }
  },
  platforms: {
    css: {
      buildPath: 'src/styles/generated/',
      transformGroup: 'css',
      files: [
        {
          destination: '_padding.css',
          format: 'utilities/paddingClasses'
        }
      ]
    }
  }
}).buildAllPlatforms()
