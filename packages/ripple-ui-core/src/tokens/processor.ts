import StyleDictionary from 'style-dictionary'
import yaml from 'yaml'
import baseConfig from './config.json' assert { type: 'json' }

StyleDictionary.registerTransform({
  name: 'size/pixels',
  type: 'value',
  matcher: (token) => ['sp', 'bp'].includes(token.attributes?.category || ''),
  transformer: (token) => `${token.value}px`
})

StyleDictionary.registerTransform({
  name: 'gradient',
  type: 'value',
  matcher: (token) => ['gradient'].includes(token.attributes?.category || ''),
  transformer: (token) => `${token.value}px`
})

StyleDictionary.registerFilter({
  name: 'validToken',
  matcher: (token) =>
    ['dimension', 'string', 'number', 'color'].includes(token.type)
})

StyleDictionary.registerFilter({
  name: 'isColor',
  matcher: (token) => {
    return token.attributes?.category === 'clr'
  }
})

StyleDictionary.registerFileHeader({
  name: 'rplHeader',
  fileHeader: () => {
    return [
      `The values in this file are controlled by the SDP design team.`,
      `Please email design@dpc.vic.gov.au if you wish to modify them.`,
      ``,
      `This file is automatically generated, do not edit directly!`
    ]
  }
})

const StyleDictionaryExtended = StyleDictionary.extend({
  ...baseConfig,
  parsers: [
    {
      pattern: /\.yaml$/,
      parse: ({ contents }) => yaml.parse(contents)
    }
  ]
})

StyleDictionaryExtended.buildAllPlatforms()
