version: 2.1
orbs:
  node: circleci/node@5.0.0

defaults: &defaults
  docker:
    - image: cypress/browsers:node-18.16.0-chrome-114.0.5735.133-1-ff-114.0.2-edge-114.0.1823.51-1
      environment:
        TERM: xterm
        TZ: 'Australia/Melbourne'
        NUXT_PUBLIC_API_URL: http://localhost:3001
      auth:
        username: $DOCKERHUB_USERNAME
        password: $DOCKERHUB_PASSWORD
  working_directory: ~/app

jobs:
  build:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          name: Restore pnpm Package Cache
          keys:
            - v2-pnpm-packages-{{ checksum "pnpm-lock.yaml" }}
      - run:
          name: Install pnpm package manager
          command: |
            corepack enable
            corepack prepare pnpm@8.6.2 --activate
      - run:
          name: Install Dependencies
          command: pnpm install
      - save_cache:
          name: Save pnpm Package Cache
          key: v2-pnpm-packages-{{ checksum "pnpm-lock.yaml" }}
          paths:
            - node_modules
            - ~/.cache
      - persist_to_workspace:
          root: ~/app
          paths: [.]
  unit:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/app
      - run:
          name: Install pnpm package manager
          command: |
            corepack enable
            corepack prepare pnpm@8.6.2 --activate
      - run:
          name: Lint code.
          command: pnpm run lint
      - run:
          command: pnpm run test:unit
          name: Run unit tests
      - store_test_results:
          path: test-results

  component-tests-core:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/app
      - restore_cache:
          keys:
            - v2-pnpm-packages-{{ checksum "pnpm-lock.yaml" }}
      - run:
          name: Install pnpm package manager
          command: |
            corepack enable
            corepack prepare pnpm@8.6.2 --activate
      - run:
          command: pnpm run test:components-core
          name: Run cypress component tests - UI Core

  component-tests-forms:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/app
      - restore_cache:
          keys:
            - v2-pnpm-packages-{{ checksum "pnpm-lock.yaml" }}
      - run:
          name: Install pnpm package manager
          command: |
            corepack enable
            corepack prepare pnpm@8.6.2 --activate
      - run:
          command: pnpm run test:components-forms
          name: Run cypress component tests - UI Forms

  build-docs:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/app
      - run:
          name: Install pnpm package manager
          command: |
            corepack enable
            corepack prepare pnpm@8.6.2 --activate
      - run:
          name: build docs site
          command: pnpm run build:docs

  build-examples:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/app
      - run:
          name: Install pnpm package manager
          command: |
            corepack enable
            corepack prepare pnpm@8.6.2 --activate
      - run:
          name: build example apps
          command: pnpm run build:examples
      - persist_to_workspace:
          root: ~/app
          paths: [.]

  integration-nuxt:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/app
      - restore_cache:
          keys:
            - v2-pnpm-packages-{{ checksum "pnpm-lock.yaml" }}
      - run:
          name: Install pnpm package manager
          command: |
            corepack enable
            corepack prepare pnpm@8.6.2 --activate
      - run:
          command: pnpm run ci:nuxt-app
          name: Run integration tests with Cypress
      - store_artifacts:
          path: examples/nuxt-app/test/videos
      - store_artifacts:
          path: examples/nuxt-app/test/screenshots
      - store_test_results:
          path: examples/nuxt-app/test/results

  build-storybook:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/app
      - run:
          name: Install pnpm package manager
          command: |
            corepack enable
            corepack prepare pnpm@8.6.2 --activate
      - run:
          command: pnpm build:storybook
          name: Build static storybook
      - persist_to_workspace:
          root: ~/app
          paths:
            - packages/ripple-storybook/storybook-static

  test-storybook:
    docker:
      - image: mcr.microsoft.com/playwright:v1.30.0
    environment:
      NODE_ENV: development
    working_directory: ~/app
    steps:
      - attach_workspace:
          at: ~/app
      - run:
          name: Install pnpm package manager
          command: |
            corepack enable
            corepack prepare pnpm@8.6.2 --activate
      - run:
          command: pnpm test:storybook-ci
          name: Run storybook Tests

  chromatic:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/app
        # Runs the Chromatic CLI for core and forms packages
      - run:
          name: Install pnpm package manager
          command: |
            corepack enable
            corepack prepare pnpm@8.6.2 --activate
      - run: pnpm chromatic --project-token=${CHROMATIC_PROJECT_TOKEN} --exit-zero-on-changes --exit-once-uploaded --skip 'gh-readonly-queue/**'

  performance:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/app
        # Runs the Chromatic CLI for core and forms packages
      - run:
          name: Install pnpm package manager
          command: |
            corepack enable
            corepack prepare pnpm@8.6.2 --activate
      - run: SHELL=$SHELL pnpm setup
      - run: pnpm install puppeteer -w
      - run: pnpm -F nuxt-ripple-cli build
      - run: npm install ./packages/nuxt-ripple-cli --global
      - run: pnpm -F nuxt-app lighthouse:ci
      - store_artifacts:
          path: examples/nuxt-app/.unlighthouse

  publish-alpha:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: ~/app
      - restore_cache:
          keys:
            - v2-pnpm-packages-{{ checksum "pnpm-lock.yaml" }}
      - run:
          name: set git credentials
          command: |
            git config --global user.email "sdp.devs@dpc.vic.gov.au"
            git config --global user.name "SDP Deploy"
      - run:
          name: Install pnpm package manager
          command: |
            corepack enable
            corepack prepare pnpm@8.6.2 --activate
      - run:
          name: Publish canary prerelease to @next tag on NPM
          command: |
            npm config set access public
            npm set //registry.npmjs.org/:_authToken=$NPM_TOKEN
            pnpm release:publish-next --yes
  publish:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: ~/app
      - restore_cache:
          keys:
            - v2-pnpm-packages-{{ checksum "pnpm-lock.yaml" }}
      - run:
          name: set git credentials
          command: |
            git config --global user.email "sdp.devs@dpc.vic.gov.au"
            git config --global user.name "SDP Deploy"
      - run:
          name: Install pnpm package manager
          command: |
            corepack enable
            corepack prepare pnpm@8.6.2 --activate
      - run:
          name: Publish prod release to NPM
          command: |
            npm config set access public
            npm set //registry.npmjs.org/:_authToken=$NPM_TOKEN
            pnpm release:publish --yes

  update-reference:
    <<: *defaults
    steps:
      - run:
          name: Kick off new pipeline
          command: |
            curl --location --request POST 'https://circleci.com/api/v2/project/github/dpc-sdp/reference-sdp-vic-gov-au/pipeline' \
            --header 'Content-Type: application/json' \
            --header "Circle-Token: $CIRCLECI_API_TOKEN" \
            --data '{"branch": "v2","parameters": {"update": true}}'

workflows:
  commit:
    jobs:
      - build
      - unit:
          requires:
            - build
      - component-tests-core:
          requires:
            - build
      - component-tests-forms:
          requires:
            - build
      - build-storybook:
          requires:
            - build
      - build-examples:
          requires:
            - build
      - performance:
          requires:
            - build-examples
      - integration-nuxt:
          requires:
            - build-examples
      - test-storybook:
          requires:
            - build-storybook
      - confirm-chromatic:
          type: approval
          requires:
            - build-storybook
          filters:
            branches:
              ignore:
                - develop
                - /gh-readonly-queue\/.*/
      - chromatic:
          requires:
            - confirm-chromatic
            - build-storybook
      - publish-alpha:
          requires:
            - build
            - build-examples
            - build-storybook
            - unit
            - integration-nuxt
            - test-storybook
            - chromatic
          filters:
            branches:
              only:
                - develop
      - update-reference:
          requires:
            - publish-alpha
      - publish:
          requires:
            - build
            - build-examples
            - build-storybook
            - unit
            - integration-nuxt
            - test-storybook
            - chromatic
          filters:
            branches:
              only:
                - main
